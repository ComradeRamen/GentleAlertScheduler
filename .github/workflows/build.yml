name: Build and Release GentleAlertScheduler

on:
  # Allows manual triggering from the Actions tab
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release Tag/Name (e.g., v1.5.0). This will be used for the GitHub Release.'
        required: true    # Make it mandatory for manual runs intended for release
        type: string

  # Trigger on tag push (for automated releases)
  push:
    tags:
      - 'v*' # Example: v1.0, v1.4.1

jobs:
  build-release-windows:
    runs-on: windows-latest

    # ---- ADDED Permissions Block at Job Level ----
    permissions:
      contents: write # Allow this specific job to write content (e.g., create releases/tags)
    # ---- END Job Level Permissions Block ----

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v4

    # Sets up Python environment
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10' # Or your preferred Python version

    # Installs dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller Pillow

    # Runs PyInstaller to build the executable (using backticks and --add-data)
    - name: Build with PyInstaller
      run: |
        pyinstaller --name GentleAlertScheduler `
                    --onefile `
                    --windowed `
                    --icon=alert.png `
                    --add-data "alert.png:." `
                    main.py

    # Creates a GitHub Release and uploads the executable to it
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      # Run if triggered by a tag OR manually via workflow_dispatch
      if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
      with:
        # Use the manually provided tag OR the git tag for the release
        tag_name: ${{ github.event.inputs.release_tag || github.ref_name }}
        # Use the tag for the release name as well (optional, can be customized)
        name: Release ${{ github.event.inputs.release_tag || github.ref_name }}
        # Asset(s) to upload
        files: dist/GentleAlertScheduler.exe
        # Optional settings:
        # body: |
        #   Automated release. Add notes here.
        # draft: false        # Set to true to create a draft release first
        # prerelease: false   # Set to true to mark as a pre-release
      env:
        # This token is provided by GitHub Actions automatically.
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
